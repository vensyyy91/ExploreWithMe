{
	"info": {
		"_postman_id": "e3bae8d8-122a-4318-a376-562f8ddcb8c3",
		"name": "Test Explore With Me - Feature Rating",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28169928"
	},
	"item": [
		{
			"name": "Add new user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user134@yandex.ru\",\r\n    \"name\": \"user134\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user135@yandex.ru\",\r\n    \"name\": \"user135\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new user 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user136@yandex.ru\",\r\n    \"name\": \"user136\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"category119\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new event",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const moment = require('moment');\r",
							"let m = moment().add(3, 'hours');\r",
							"pm.globals.set(\"nowPlusTwo\", m.format(\"YYYY-MM-DD HH:mm:ss\"));\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"103 event is best event ever\",\r\n    \"category\": 119,\r\n    \"description\": \"best event ever made for tests in postman\",\r\n    \"eventDate\": \"{{nowPlusTwo}}\",\r\n    \"location\": {\r\n        \"lat\": 80,\r\n        \"lon\": 50\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 0,\r\n    \"requestModeration\": false,\r\n    \"title\": \"event 103\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events"
					],
					"variable": [
						{
							"key": "userId",
							"value": "134",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new request 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/requests?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"requests"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new request 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/requests?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"requests"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "136",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark FAIL wrong event",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 8,\r\n    \"message\": \"very interesting event!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=1000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "1000",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark FAIL by initiator",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 8,\r\n    \"message\": \"very interesting event!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "134",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark FAIL not by visitor",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 8,\r\n    \"message\": \"very interesting event!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "133",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark FAIL wrong mark",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 11,\r\n    \"message\": \"very interesting event!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark FAIL short message",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 8,\r\n    \"message\": \"go\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark FAIL long message",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 8,\r\n    \"message\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 8,\r\n    \"message\": \"very interesting event!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mark FAIL wrong mark id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 3,\r\n    \"message\": \"i was wrong, not interesting\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks/:markId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks",
						":markId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						},
						{
							"key": "markId",
							"value": "999",
							"description": "Идентификатор оценки"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mark FAIL by another user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 3,\r\n    \"message\": \"i was wrong, not interesting\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks/:markId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks",
						":markId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "134",
							"description": "Идентификатор пользователя"
						},
						{
							"key": "markId",
							"value": "1",
							"description": "Идентификатор оценки"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mark FAIL wrong mark",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 11,\r\n    \"message\": \"i was wrong, not interesting\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks/:markId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks",
						":markId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						},
						{
							"key": "markId",
							"value": "1",
							"description": "Идентификатор оценки"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mark FAIL short message",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 3,\r\n    \"message\": \"no\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks/:markId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks",
						":markId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						},
						{
							"key": "markId",
							"value": "1",
							"description": "Идентификатор оценки"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mark FAIL long message",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 3,\r\n    \"message\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks/:markId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks",
						":markId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						},
						{
							"key": "markId",
							"value": "1",
							"description": "Идентификатор оценки"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mark",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 3,\r\n    \"message\": \"i was wrong, not interesting\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks/:markId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks",
						":markId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						},
						{
							"key": "markId",
							"value": "1",
							"description": "Идентификатор оценки"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new mark 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mark\": 5,\r\n    \"message\": \"not bad!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?eventId=103",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "136",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user marks FAIL wrong from",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?from=-1&size=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "from",
							"value": "-1",
							"description": "Количество элементов, которые нужно пропустить для формирования текущего набора"
						},
						{
							"key": "size",
							"value": "100",
							"description": "Количество элементов в наборе"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user marks FAIL wrong size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks?from=0&size=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"query": [
						{
							"key": "from",
							"value": "0",
							"description": "Количество элементов, которые нужно пропустить для формирования текущего набора"
						},
						{
							"key": "size",
							"value": "0",
							"description": "Количество элементов в наборе"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user marks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/marks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"marks"
					],
					"variable": [
						{
							"key": "userId",
							"value": "135",
							"description": "Идентификатор пользователя"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get event marks FAIL wrong event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "999",
							"description": "Идентификатор события"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get event marks FAIL wrong from",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks/:eventId?from=-1&size=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks",
						":eventId"
					],
					"query": [
						{
							"key": "from",
							"value": "-1",
							"description": "Количество элементов, которые нужно пропустить для формирования текущего набора"
						},
						{
							"key": "size",
							"value": "100",
							"description": "Количество элементов в наборе"
						}
					],
					"variable": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get event marks FAIL wrong size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks/:eventId?from=0&size=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks",
						":eventId"
					],
					"query": [
						{
							"key": "from",
							"value": "0",
							"description": "Количество элементов, которые нужно пропустить для формирования текущего набора"
						},
						{
							"key": "size",
							"value": "0",
							"description": "Количество элементов в наборе"
						}
					],
					"variable": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get event marks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "103",
							"description": "Идентификатор события"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get recent marks FAIL wrong from",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks?from=-1&size=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks"
					],
					"query": [
						{
							"key": "from",
							"value": "-1",
							"description": "Количество элементов, которые нужно пропустить для формирования текущего набора"
						},
						{
							"key": "size",
							"value": "100",
							"description": "Количество элементов в наборе"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get recent marks FAIL wrong size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks?from=0&size=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks"
					],
					"query": [
						{
							"key": "from",
							"value": "0",
							"description": "Количество элементов, которые нужно пропустить для формирования текущего набора"
						},
						{
							"key": "size",
							"value": "0",
							"description": "Количество элементов в наборе"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get recent marks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/marks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"marks"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}